/*
题目描述
有一个长度为整数L(1<=L<=10000)的马路，可以想象成数轴上长度为L的一个线段，起点是坐标原点，在每个整数坐标点有一棵树，即在0,1,2，...，L共L+1个位置上有L+1
棵树。现在要移走一些树，移走的树的区间用一对数字表示，如 100 200表示移走从100到200之间（包括端点）所有的树可能有M(1<=M<=100)个区间，区间之间可能有重叠。
现在要求移走所有区间的树之后剩下的树的个数。

输入
两个整数L(1<=L<=10000)和M(1<=M<=100)。接下来有M组整数，每组有一对数字。

输出
可能有多组输入数据，对于每组输入数据，输出一个数，表示移走所有区间的树之后剩下的树的个数。

样例输入
4 2
1 2
0 2
11 2
1 5
4 7
0 0
样例输出
2
5
*/


#include "stdafx.h"
#include<stdio.h>
#include<stdlib.h>

const int max = 10000;

int main() {
	int i,a[max], L, M;
	while (scanf("%d", &L) != EOF) {//输入多组数据；
		for (i = 0;i <= L;i++) {//赋值为1表示有树存在；
			a[i] = 1;
		}
		scanf("%d", &M);
		while (M > 0) {//输入M组数；
			M--;
			int b,c;
			scanf("%d%d", &b, &c);
			for (i = b;i <= c;i++) {//在所输入的区间内置为0，表示移走了。
				a[i] = 0;
			}
		}
		int j = 0;
		for (i = 0;i <= L;i++) {
			if (a[i] == 1) j++;//统计剩下的树；
		}
		printf("%d\n", j);
	}
	system("pause");
	return 0;
}
